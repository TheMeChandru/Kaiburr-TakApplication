name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_REGISTRY: docker.io
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      BACKEND_IMAGE: taskapp-backend
      FRONTEND_IMAGE: taskapp-frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # ---------------------------
    # Backend Build
    # ---------------------------
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Backend
      working-directory: ./taskapp-backend
      run: mvn clean package -DskipTests

    # ---------------------------
    # Frontend Build
    # ---------------------------
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install frontend dependencies
      working-directory: ./taskapp-frontend
      run: npm install

    - name: Build frontend
      working-directory: ./taskapp-frontend
      run: npm run build

    # ---------------------------
    # Docker Build & Push
    # ---------------------------
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build backend Docker image
      working-directory: ./taskapp-backend
      run: docker build -t $DOCKER_USERNAME/$BACKEND_IMAGE:latest .

    - name: Build frontend Docker image
      working-directory: ./taskapp-frontend
      run: docker build -t $DOCKER_USERNAME/$FRONTEND_IMAGE:latest .

    - name: Push backend image
      run: docker push $DOCKER_USERNAME/$BACKEND_IMAGE:latest

    - name: Push frontend image
      run: docker push $DOCKER_USERNAME/$FRONTEND_IMAGE:latest

    # ---------------------------
    # Optional: Kubernetes Deploy
    # ---------------------------
    #- name: Set up kubectl
    #  uses: azure/setup-kubectl@v3
    #  with:
    #    version: 'v1.28.0'

    #- name: Deploy to Kubernetes
    #  run: kubectl apply -f k8s/
